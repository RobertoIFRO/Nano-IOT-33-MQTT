/*   https://www.instructables.com/How-to-Publish-Data-From-an-Arduino-Microcontrolle/          -> link tutorial
/    https://www.hivemq.com/demos/websocket-client/
/    https://app.arduino.cc/things/6db47ec7-ead6-4479-a1b3-09d259707bfe/sketch
/
/
*/




#include <WiFiNINA.h>
#include <PubSubClient.h>

// WiFi credentials
const char* ssid = "Casa";
const char* password = "4567asdf";

// MQTT Broker (replace with your broker if using a local one)
const char* mqtt_server = "broker.hivemq.com"; // Public broker for testing
const int mqtt_port = 1883;
const char* mqtt_topic = "roberto.simplicio@ifro.edu.br/testtopic1";

WiFiClient wifiClient;
PubSubClient client(wifiClient);

// Connect to WiFi
void setupWiFi() {
  Serial.print("Connecting to WiFi...");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected to WiFi.");
}

// Reconnect to MQTT if disconnected
void reconnectMQTT() {
  while (!client.connected()) {
    Serial.print("Connecting to MQTT...");
    if (client.connect("ArduinoClient")) {
      Serial.println("connected");
      client.subscribe(mqtt_topic); // Subscribe to topic
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      delay(2000);
    }
  }
}

void setup() {
  Serial.begin(9600);
  setupWiFi();

  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(callback);
}

// Define a callback function to handle incoming messages
void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived in topic: ");
  Serial.println(topic);
  Serial.print("Message: ");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();
}

void loop() {
  if (!client.connected()) {
    reconnectMQTT();
  }
  client.loop();

  // Publish a test message every 5 seconds
  static unsigned long lastMsgTime = 0;
  unsigned long now = millis();
  if (now - lastMsgTime > 5000) {
    lastMsgTime = now;
    String message = "Hello from Arduino!";
    Serial.print("Publishing message: ");
    Serial.println(message);
    client.publish(mqtt_topic, message.c_str());
  }
